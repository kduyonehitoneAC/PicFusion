import os
import glob
import random
from PIL import Image
from tqdm import tqdm

# ==== C·∫§U H√åNH ====
INPUT_DIR = "./"       # th∆∞ m·ª•c ch·ª©a ·∫£nh g·ªëc
OUTPUT_DIR = "./"      # th∆∞ m·ª•c l∆∞u ·∫£nh ƒë√£ t·∫°o
ROWS, COLS = 3, 5                # chia ·∫£nh th√†nh 3x5 = 15 m·∫£nh
NUM_SHUFFLES = 10              # s·ªë ·∫£nh x√°o tr·ªôn c·∫ßn sinh ra / m·ªói ·∫£nh

os.makedirs(OUTPUT_DIR, exist_ok=True)

def create_shuffled_versions(image_path, num_versions=1000):
    """C·∫Øt ·∫£nh th√†nh 15 m·∫£nh, x√°o tr·ªôn r·ªìi gh√©p l·∫°i nhi·ªÅu l·∫ßn"""
    img = Image.open(image_path).convert("RGB")
    W, H = img.size
    patch_w, patch_h = W // COLS, H // ROWS

    # C·∫Øt ·∫£nh g·ªëc th√†nh c√°c m·∫£nh nh·ªè
    patches = []
    for r in range(ROWS):
        for c in range(COLS):
            left, upper = c * patch_w, r * patch_h
            right, lower = left + patch_w, upper + patch_h
            patches.append(img.crop((left, upper, right, lower)))

    # L∆∞u ·∫£nh g·ªëc (ƒë√£ resize v√† chu·∫©n k√≠ch th∆∞·ªõc)
    base_name = os.path.splitext(os.path.basename(image_path))[0]
    orig_save_path = os.path.join(OUTPUT_DIR, f"{base_name}_original.jpg")
    img.save(orig_save_path)

    # T·∫°o 1000 phi√™n b·∫£n x√°o tr·ªôn
    for i in range(num_versions):
        random.shuffle(patches)
        shuffled_img = Image.new("RGB", (W, H))
        for idx, patch in enumerate(patches):
            r, c = divmod(idx, COLS)
            shuffled_img.paste(patch, (c * patch_w, r * patch_h))

        save_path = os.path.join(OUTPUT_DIR, f"{base_name}_shuffle_{i+1:04d}.jpg")
        shuffled_img.save(save_path)

    print(f"‚úÖ {base_name}: ƒë√£ t·∫°o {num_versions} ·∫£nh x√°o tr·ªôn + ·∫£nh g·ªëc.")

# ==== CH·∫†Y TR√äN TO√ÄN B·ªò ·∫¢NH TRONG TH∆Ø M·ª§C ====
if __name__ == "__main__":
    image_paths = glob.glob(os.path.join(INPUT_DIR, "*.jpg")) + \
                  glob.glob(os.path.join(INPUT_DIR, "*.png"))

    if not image_paths:
        raise ValueError(f"Kh√¥ng t√¨m th·∫•y ·∫£nh trong {INPUT_DIR}")

    print(f"T√¨m th·∫•y {len(image_paths)} ·∫£nh trong {INPUT_DIR}.")
    print(f"üëâ S·∫Ω t·∫°o {NUM_SHUFFLES} ·∫£nh x√°o tr·ªôn cho m·ªói ·∫£nh (t·ªïng ~{len(image_paths) * NUM_SHUFFLES} ·∫£nh).")

    for path in tqdm(image_paths, desc="Processing images"):
        create_shuffled_versions(path, NUM_SHUFFLES)

    print("\nüéØ Ho√†n t·∫•t t·∫°o d·ªØ li·ªáu train trong th∆∞ m·ª•c:", OUTPUT_DIR)
